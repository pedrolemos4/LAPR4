@startuml
'http://plantuml.com/skinparam.html
skinparam handwritten true
skinparam monochrome true
skinparam packageStyle rect
skinparam defaultFontName FG Virgil
skinparam shadowing false

		participant ":EspecificarServiçoUI" as ui <<presentation>>
		participant ":EspecificarServicoController" as ctrl <<application>>
    participant "ServicoBuilder" as builder <<builder>>
		participant ":PersistenceContext" as pc <<persistence>>
		participant ":RepositoryFactory" as rf <<factory>> 
		participant ":CatalagoRepository" as repoCA <<repository>>
    participant ":FormularioRepository" as repoFORM <<repository>>
		participant ":Servico" as servico <<domain>>
		participant ":ServicoRepository" as repo <<repository>>

    
		ui->ctrl:create()
		ui->ctrl:listCatalogos()
		ctrl->pc:repositories()
		pc->rf:create()
		rf->repoCA:create()
		ctrl->repoCA:findAll()
		ctrl-->ui:Catalogos
    
		ui->ui:doShow()
    ui->ctrl:novoFormulario(nome,nomeVariavel,etiqueta,descricaoAjuda,tipoDados,expressaoRegular)
    ctrl->builder:withForm(nome,nomeVariavel,etiqueta,descricaoAjuda,tipoDados,expressaoRegular)
    ctrl->pc:repositories()
		pc->rf:create()
		rf->repoFORM:create()
    ui->ui:doShow()
		
		ui->ctrl:especificarServico(descricaoBreve,descricaoCompleta,icone,título,codigoUnico,catalogo,form)
    activate ctrl
    note over ctrl: para simplificação do diagrama, não foi representada a criação dos value objects que compõe o serviço 
    ctrl -> builder:withCodigoUnico(codigoUnico)
    note over ctrl: restantes componentes
    ctrl -> builder: createServico()
    activate builder 
    builder->servico: create(codigoUnico,descricaoBreve,descricaoCompleta, titulo,icone,catalogo,form)
    builder -> ctrl: servico  
    deactivate builder

		ctrl->pc:repositories()
		pc->rf:create()
		rf->repo:create()
    ctrl->repoFORM:save(form)
		ctrl->repo:save(servico)
    ctrl->ui:servico
    deactivate ctrl
    ui->ui: showServico()
    
		
@enduml