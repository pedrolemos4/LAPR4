@startuml
'http://plantuml.com/skinparam.html
skinparam handwritten true
skinparam monochrome true
skinparam packageStyle rect
skinparam defaultFontName FG Virgil
skinparam shadowing false

participant RealizarTarefaUI as UI <<presentation>>
control RealizarTarefaController as CTRL <<application>>
database PedidoRepository as PRepository <<repository>>
database FormularioRepository as FRepository <<repository>>
database ColaboradorRepository as CRepository <<repository>>
participant Pedido as P <<domain>>
participant ValidaForm as Valida <<domain>>

activate UI

UI -> UI : doShow()
 note over CTRL: Para efeitos de simplificação do diagrama, não foram representadas todas as classes repository,\n a classe persistence e a classe factory, tendo sido utilizado o procedimento dos casos de uso do sprint B
UI -> CTRL: getUser()
    activate CTRL
    CTRL -> CRepository: getUser()
      activate CRepository
      deactivate CRepository
    deactivate CTRL
    
UI -> CTRL: getListaTarefasPendentes(colab)
    activate CTRL
      CTRL -> PRepository: getListaTarefasPendentes(colab)
      activate PRepository
      deactivate PRepository
    deactivate CTRL

UI -> CTRL: getPedidoByTarefa(atividade)
    activate CTRL
    CTRL -> PRepository: pedido = getPedidoByTarefa(atividade)
      activate PRepository
      deactivate PRepository
    deactivate CTRL

opt caso atividade tenha formulario
UI -> CTRL: getFormularioDaAtividade(atividade)
    activate CTRL
    CTRL -> PRepository: formulario = getFormularioDaAtividade(atividade)
      activate PRepository
      deactivate PRepository
    deactivate CTRL

UI -> CTRL: replaceFormularioAtividade(pedido, atividade, formulario)
    activate CTRL
    CTRL -> PRepository: replaceFormularioAtividade(pedido, atividade, formulario)
      activate PRepository
      deactivate PRepository
    deactivate CTRL

UI -> CTRL: getListaExpressaoRegularDoFormulario(formulario)
    activate CTRL
    CTRL -> PRepository: listaExpressao = getListaExpressaoRegularDoFormulario(formulario)
      activate PRepository
      deactivate PRepository
    deactivate CTRL

opt verificação local
UI -> CTRL: getAtributosDoFormulario(formulario)
    activate CTRL
    CTRL -> FRepository: listaAtr = getAtributosDoFormulario(formulario)
      activate FRepository
      deactivate FRepository
    deactivate CTRL
loop percorre listaAtr para obter cada atibuto do formulario

UI -> CTRL: getExpressaoRegularDoAtributo(atributo)
    activate CTRL
    CTRL -> FRepository: listaAtr = getExpressaoRegularDoAtributo(atributo)
      activate FRepository
      deactivate FRepository
    deactivate CTRL

UI -> CTRL: getVariavelDoAtributo(atributo)
    activate CTRL
    CTRL -> FRepository: listaAtr = getVariavelDoAtributo(atributo)
      activate FRepository
      deactivate FRepository
    deactivate CTRL

end
end

UI -> CTRL: validaFormulario(formulario)
    activate CTRL
    CTRL -> Valida: validaFormulario(formulario)
      activate Valida
      deactivate Valida
    deactivate CTRL
end

UI -> CTRL: completaDecisaoComentario(comentario, decisao, pedido, atividade,estadoPedido, estadoAtividade, duracao, dataResolucao)
    activate CTRL
    CTRL -> P: completaDecisaoComentario(comentario, decisao, pedido, atividade,estadoPedido, estadoAtividade, duracao, dataResolucao)
      activate P
      deactivate P
    deactivate CTRL

UI -> CTRL: savePedido(pedido)
    activate CTRL
    CTRL -> PRepository: savePedido(pedido)
      activate PRepository
      deactivate PRepository
    deactivate CTRL

deactivate UI
@enduml

