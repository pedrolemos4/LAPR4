title SD-Consultar os catálogos de serviços e respetivos serviços

@startuml
'http://plantuml.com/skinparam.html
skinparam handwritten true
skinparam monochrome true
skinparam packageStyle rect
skinparam defaultFontName FG Virgil
skinparam shadowing false

actor Utilizador as Actor
participant ListCatalogoServicoUI as UI <<presentation>>
control ListCatalogoServicoController as Controller <<application>>
participant PersistenceContext as Persistence <<persistence>>
participant RepositoryFactory as Factory <<factory>>
database CatalogoRepository as CRepository <<repository>>
database ServicoRepository as  SRepository <<repository>>


activate Actor
Actor -> UI: pretende consultar os catálogos de serviços e respetivos serviços
activate UI
    UI -> Controller: listCatalogo()
    activate Controller
        Controller -> Persistence: repositories()
        activate Persistence
            Persistence --> Factory: create()
            activate Factory
                Factory --> Persistence:
            deactivate Factory
            Persistence --> Controller:
        deactivate Persistence
        Controller -> Factory: catalogos()
        activate Factory
            Factory --> CRepository : create()
            activate CRepository
            deactivate CRepository
        deactivate Factory
    deactivate Controller
    UI -> Controller: listServico()
    activate Controller
        Controller -> Persistence: repositories()
        activate Persistence
            Persistence --> Factory: create()
            activate Factory
                Factory --> Persistence:
            deactivate Factory
            Persistence --> Controller:
        deactivate Persistence
        Controller -> Factory: servicos()
        activate Factory
            Factory --> SRepository : create()
            activate SRepository
            deactivate SRepository
        deactivate Factory
        
    deactivate Controller
    loop enquanto pretender fazer consulta
UI --> Actor: pergunta se pretende consultar catalogos e/ou servicos
deactivate UI
Actor -> UI: escolhe opção
opt escolhe catalogo
activate UI
UI --> Actor: solicita dados do catalogo
deactivate UI
Actor -> UI: introduz dados solicitados
activate UI
UI -> Controller:  findCatalogo(dados)
    activate Controller
        Controller -> CRepository: Catalogo  = findCatalogos(dados)
        activate CRepository
        deactivate CRepository
    deactivate Controller
deactivate UI
end

opt escolhe servico
activate UI
UI --> Actor: solicita dados do servico
deactivate UI
Actor -> UI: introduz dados solicitados
activate UI
UI -> Controller:  findServicosUtilizador()
    activate Controller
        Controller -> CRepository: listaCatalogos  = findCatalogosUtilizador()
            activate CRepository
            deactivate CRepository
        Controller -> SRepository: listaServicos = findAllServicos(listaCatalogos, dadosServico)
            activate SRepository
            deactivate SRepository
    deactivate Controller
deactivate UI
end

opt escolhe catalogo e servico corresponde
activate UI
UI --> Actor: solicita dados do catalogo e servico
deactivate UI
Actor -> UI: introduz dados solicitados
activate UI
UI -> Controller:  findCatalogo()
    activate Controller
        Controller -> CRepository: catalogo  = findCatalogo()
        activate CRepository
        deactivate CRepository
    Controller -> SRepository: listaServicos = findServicos(catalogo, dadosServico)
        activate SRepository
        deactivate SRepository
    deactivate Controller
end
end
UI --> Actor: apresenta o catálogo e os serviços solicitados

deactivate UI
deactivate Actor

@enduml
